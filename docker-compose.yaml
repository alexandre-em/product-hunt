version: "3.8"

services:
  reverse-proxy-https-helper:
    image: alpine
    command: sh -c "cd /etc/ssl/traefik && wget traefik.me/cert.pem -O cert.pem && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik
    networks:
      - phapp
  traefik:
    restart: unless-stopped
    image: traefik:v2.10.3
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Dashboard
    labels:
      - traefik.http.services.traefik.loadbalancer.server.port=8080
    volumes:
      - ./deploy/traefik.yml:/etc/traefik/traefik.yml
      - ./deploy/tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/ssl/traefik
    networks:
      - phapp
  back:
    image: phapp_back:0.1
    container_name: back
    build:
      context: ./back
    expose:
      - ${PORT}
    environment:
      - ENV=${ENV}
      - PORT=${PORT}
      - PRODUCT_HUNT_URL=${PRODUCT_HUNT_URL}
      - PRODUCT_HUNT_TOKEN=${PRODUCT_HUNT_TOKEN}
    labels:
      - traefik.http.routers.back.rule=Host(`dateph.traefik.me`) && PathPrefix(`/v1/api`)
      - traefik.http.routers.back.tls=true
    restart: on-failure
    networks:
      - phapp
  front:
    image: phapp_front:0.1
    container_name: front
    build:
      context: ./front
    restart: on-failure
    labels:
      - traefik.http.routers.front.rule=Host(`dateph.traefik.me`)
      - traefik.http.routers.front-tls.tls.domains[0].main=dateph.traefik.me
      - traefik.http.routers.front-tls.tls.domains[0].sans=dateph-*.traefik.me
      - traefik.http.routers.front.tls=true
    networks:
      - phapp

networks:
  phapp:
    driver: bridge

volumes:
  certs:
